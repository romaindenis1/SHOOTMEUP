<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gp51mYrYYMDswAAAABJRU5ErkJggg==
</value>
  </data>
</root>